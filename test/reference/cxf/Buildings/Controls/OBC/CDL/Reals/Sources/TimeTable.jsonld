{
  "@context": {
    "S231P": "https://data.ashrae.org/S231P#",
    "qudt": "http://qudt.org/schema/qudt#",
    "unit": "http://qudt.org/vocab/unit#"
  },
  "@graph": [
    {
      "@id": "http://example.org#Buildings.Controls.OBC.CDL.Reals.Sources.TimeTable.tab.y",
      "S231P:isConnectedTo": {
        "@id": "https://data.ashrae.org/S231P#Buildings.Controls.OBC.CDL.Reals.Sources.TimeTable.y"
      }
    },
    {
      "@id": "https://data.ashrae.org/S231P#Buildings.Controls.OBC.CDL.Reals.Sources.TimeTable",
      "@type": "S231P:ElementaryBlock",
      "S231P:documentation": "info=<html>\n<p>\nBlock that outputs values of a time table.\n</p>\n<p>\nThe block takes as a parameter a time table of a format:\n</p>\n<pre>\ntable = [ 0*3600, 0;\n          6*3600, 0;\n          6*3600, 1;\n         18*3600, 1;\n         18*3600, 0;\n         24*3600, 0];\n</pre>\n<p>\nwhere the first column is time in seconds, and the remaining\ncolumn(s) are the table values.\nAny number of columns can be specified.\nThe parameter <code>smoothness</code> determines how the table values\nare interpolated. The following settings are allowed:\n</p>\n\n<table summary=\\summary\\ border=\\1\\ cellspacing=\\0\\ cellpadding=\\2\\ style=\\border-collapse:collapse;\\>\n<tr><th><code>smoothness</code></th><th>Description</th></tr>\n<tr>\n  <td><code>CDL.Types.LinearSegments</code></td>\n  <td>Table points are linearly interpolated.</td>\n</tr>\n<tr>\n  <td><code>CDL.Types.ConstantSegments</code></td>\n  <td>Table points are not interpolated,\n      but the previous tabulated value is returned.</td>\n</tr>\n</table>\n\n<p>\nThe parameter <code>extrapolation</code> determines how the table\nvalues are extrapolated. The following settings are allowed:\n</p>\n\n<table summary=\\summary\\ border=\\1\\ cellspacing=\\0\\ cellpadding=\\2\\ style=\\border-collapse:collapse;\\>\n<tr><th><code>extrapolation</code></th><th>Description</th></tr>\n<tr>\n  <td><code>CDL.Types.HoldLastPoint</code></td>\n  <td>Hold the first or last table point outside of the table scope.</td>\n</tr>\n<tr>\n  <td><code>CDL.Types.LastTwoPoints</code></td>\n  <td>Extrapolate by using the derivative at the first or last table points\n      outside of the table scope.</td>\n</tr>\n<tr>\n  <td><code>CDL.Types.Periodic</code></td>\n  <td>Repeat the table scope periodically with periodicity\n      <code>(max(table[:, 1]-min(table[:, 1]))*timeScale)</code>.</td>\n</tr>\n</table>\n\n<p>\nIf <code>extrapolation === CDL.Types.Periodic</code>, then the above example\nwould give a schedule with periodicity of one day. The simulation can start at any time,\nwhether it is a multiple of a day or not, and positive or negative.\n</p>\n\n<p>\nThe value of the parameter <code>offset</code> is added to the tabulated\nvalues.\nThe parameters <code>timeScale</code> is used to scale the first column\nof the table. For example, set <code>timeScale = 3600</code> if the first\ncolumn is in hour (because in CDL, the time unit is seconds).\n</p>\n<p>\nIf the table has only one row, no interpolation is performed and\nthe table values of this row are just returned.\n</p>\n<p>\nAn interval boundary is defined by two identical time values\nfollowing each other. For example\n</p>\n<pre>\n   table = [0, 0;\n            1, 0;\n            1, 1;\n            2, 3;\n            3, 5;\n            3, 2;\n            4, 4;\n            5, 5];\n</pre>\n<p>\ndefines three intervalls: 0..1, 1..3, 3..5. Within an interval the defined\ninterpolation method is applied (so the table outputs within an interval are\ncontinuous if <code>smoothness = CDL.Types.LinearSegments</code>).\n</p>\n<p>\nExample:\n</p>\n<pre>\n  table = [0, 0;\n           1, 0;\n           1, 1;\n           2, 4;\n           3, 9;\n           4, 16];\n  smoothness = CDL.Types.LinearSegments;\n\nIf, e.g., time = 1.0, the output y =  0.0 (before event), 1.0 (after event)\n    e.g., time = 1.5, the output y =  2.5,\n    e.g., time = 2.0, the output y =  4.0,\n    e.g., time = 5.0, the output y = 23.0 (i.e., extrapolation via last 2 points).\n</pre>\n<h4>Implementation</h4>\n<p>\nFor simulation,\nno time events are generated within an interval\nin order that also intervals with many points do not reduce the simulation efficiency.\nIf the table points are largely changing, it is adviseable to force\ntime events by duplicating every time point (especially, if the model in which\nthe table is present allows the variable step integrator to make large\nintegrator steps). For example, if a sawtooth signal is defined with the table,\nit is more reliable to define the table as:\n</p>\n<pre>\n   table = [0, 0;\n            1, 2;\n            1, 2;\n            2, 0;\n            2, 0;\n            3, 2;\n            3, 2];\n</pre>\n<p>\ninstead of\n</p>\n<pre>\n   table = [0, 0;\n            1, 2;\n            2, 0;\n            3, 2];\n</pre>\n<p>\nbecause time events are then generated at every time point.\n</p>\n<p>\nBuilding automation systems typically have discrete time semantics\nwith fixed sampling times, and no notion of superdense time (in which\na tabulated value can change without advancing time).\nTherefore, to implement a table with two equal time stamps,\na CDL translator may parameterize\na table in the building automation in such a way that the step change happens\nat the time indicated in the first column, whereas previous sampling times\noutput the tabulated value at the last transition. For example,\n</p>\n<pre>\ntable = [0, 0;\n         1, 0;\n         1, 1];\nsmoothness = CDL.Types.ConstantSegments;\n</pre>\n<p>\nmay be converted such that a building automation system with a sampling time\nof <i>0.5</i> seconds outputs\n</p>\n<pre>\n  t = 0, 0.5, 1, ...\n  y = 0, 0  , 1, ...\n</pre>\n</html>,revisions=<html>\n<ul>\n<li>\nOctober 21, 2021, by Michael Wetter:<br/>\nRemoved writing output value in icon (as it is an array of values).\n</li>\n<li>\nNovember 12, 2020, by Michael Wetter:<br/>\nReformulated to remove dependency to <code>Modelica.Units.SI</code>.<br/>\nThis is for\n<a href=\\https://github.com/lbl-srg/modelica-buildings/issues/2243\\>Buildings, issue 2243</a>.\n</li>\n<li>\nOctober 19, 2020, by Michael Wetter:<br/>\nRevised to call <code>round()</code> as a function.<br/>\nFor <a href=\\https://github.com/lbl-srg/modelica-buildings/issues/2170\\>Buildings, issue 2170</a>.\n</li>\n<li>\nOctober 7, 2020, by Michael Wetter:<br/>\nRevised implementation to add <code>timeSpan</code>.\n</li>\n<li>\nMarch 13, 2020, by Michael Wetter:<br/>\nCorrected implementation so that the table also works if the simulation\nstarts at a negative time.<br/>\nThis is for\n<a href=\\https://github.com/lbl-srg/modelica-buildings/issues/1834\\>Buildings, issue 1834</a>.\n</li>\n<li>\nMarch 2, 2020, by Michael Wetter:<br/>\nChanged icon to display dynamically the output value.\n</li>\n<li>\nMarch 14, 2017, by Michael Wetter:<br/>\nRefactored and simplified implementation.\n</li>\n<li>\nFebruary 23, 2017, by Milica Grahovac:<br/>\nInitial CDL implementation.\n</li>\n</ul>\n</html>",
      "S231P:hasOutput": {
        "@id": "https://data.ashrae.org/S231P#Buildings.Controls.OBC.CDL.Reals.Sources.TimeTable.y"
      },
      "S231P:hasParameter": [
        {
          "@id": "https://data.ashrae.org/S231P#Buildings.Controls.OBC.CDL.Reals.Sources.TimeTable.extrapolation"
        },
        {
          "@id": "https://data.ashrae.org/S231P#Buildings.Controls.OBC.CDL.Reals.Sources.TimeTable.offset"
        },
        {
          "@id": "https://data.ashrae.org/S231P#Buildings.Controls.OBC.CDL.Reals.Sources.TimeTable.smoothness"
        },
        {
          "@id": "https://data.ashrae.org/S231P#Buildings.Controls.OBC.CDL.Reals.Sources.TimeTable.table"
        },
        {
          "@id": "https://data.ashrae.org/S231P#Buildings.Controls.OBC.CDL.Reals.Sources.TimeTable.timeScale"
        }
      ],
      "S231P:icon": "coordinateSystem(extent={{-100,-100},{100,100}},preserveAspectRatio=true),graphics={Rectangle(extent={{-100,-100},{100,100}},lineColor={0,0,127},fillColor={255,255,255},fillPattern=FillPattern.Solid),Text(textString=\"%name\",textColor={0,0,255},extent={{-150,150},{150,110}}),Polygon(points={{-80,90},{-88,68},{-72,68},{-80,90}},lineColor={192,192,192},fillColor={192,192,192},fillPattern=FillPattern.Solid),Line(color={192,192,192},points={{-80,68},{-80,-80}}),Line(color={192,192,192},points={{-90,-70},{82,-70}}),Polygon(points={{90,-70},{68,-62},{68,-78},{90,-70}},lineColor={192,192,192},fillColor={192,192,192},fillPattern=FillPattern.Solid),Rectangle(extent={{-48,-50},{2,70}},lineColor={255,255,255},fillColor={255,215,136},fillPattern=FillPattern.Solid),Line(points={{-48,-50},{-48,70},{52,70},{52,-50},{-48,-50},{-48,-20},{52,-20},{52,10},{-48,10},{-48,40},{52,40},{52,70},{2,70},{2,-51}})}",
      "S231P:label": "TimeTable"
    },
    {
      "@id": "https://data.ashrae.org/S231P#Buildings.Controls.OBC.CDL.Reals.Sources.TimeTable.extrapolation",
      "S231P:accessSpecifier": "public",
      "S231P:description": "Extrapolation of data outside the definition range",
      "S231P:label": "extrapolation",
      "S231P:value": "CDL.Types.Extrapolation.Periodic"
    },
    {
      "@id": "https://data.ashrae.org/S231P#Buildings.Controls.OBC.CDL.Reals.Sources.TimeTable.offset",
      "@type": "S231P:Parameter",
      "S231P:accessSpecifier": "public",
      "S231P:description": "Offsets of output signals as a vector with length equal to number of table matrix columns less one",
      "S231P:isArray": true,
      "S231P:isOfDataType": {
        "@id": "S231P:Real"
      },
      "S231P:label": "offset[:]",
      "S231P:numberDimensions": 1,
      "S231P:value": "fill(0,nout)"
    },
    {
      "@id": "https://data.ashrae.org/S231P#Buildings.Controls.OBC.CDL.Reals.Sources.TimeTable.smoothness",
      "S231P:accessSpecifier": "public",
      "S231P:description": "Smoothness of table interpolation",
      "S231P:label": "smoothness",
      "S231P:value": "CDL.Types.Smoothness.LinearSegments"
    },
    {
      "@id": "https://data.ashrae.org/S231P#Buildings.Controls.OBC.CDL.Reals.Sources.TimeTable.tab",
      "S231P:hasInstance": {
        "@id": "http://example.org#Buildings.Controls.OBC.CDL.Reals.Sources.TimeTable.tab.y"
      }
    },
    {
      "@id": "https://data.ashrae.org/S231P#Buildings.Controls.OBC.CDL.Reals.Sources.TimeTable.table",
      "@type": "S231P:Parameter",
      "S231P:accessSpecifier": "public",
      "S231P:description": "Table matrix (time = first column is time in seconds, unless timeScale <> 1)",
      "S231P:isArray": true,
      "S231P:isOfDataType": {
        "@id": "S231P:Real"
      },
      "S231P:label": "table[:,:]",
      "S231P:numberDimensions": 2
    },
    {
      "@id": "https://data.ashrae.org/S231P#Buildings.Controls.OBC.CDL.Reals.Sources.TimeTable.timeScale",
      "@type": "S231P:Parameter",
      "qudt:hasUnit": {
        "@id": "unit:UNITLESS"
      },
      "S231P:accessSpecifier": "public",
      "S231P:description": "Time scale of first table column. Set to 3600 if time in table is in hours",
      "S231P:isOfDataType": {
        "@id": "S231P:Real"
      },
      "S231P:label": "timeScale",
      "S231P:value": 1
    },
    {
      "@id": "https://data.ashrae.org/S231P#Buildings.Controls.OBC.CDL.Reals.Sources.TimeTable.y",
      "@type": "S231P:RealOutput",
      "S231P:accessSpecifier": "public",
      "S231P:description": "Output with tabulated values",
      "S231P:graphics": "Placement(transformation(extent={{100,-20},{140,20}})))",
      "S231P:isArray": true,
      "S231P:label": "y[nout]",
      "S231P:numberDimensions": 1,
      "S231P:sizeOfDimensions": "(nout)"
    }
  ]
}