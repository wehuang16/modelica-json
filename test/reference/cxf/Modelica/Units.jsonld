{
  "@context": {
    "S231P": "https://data.ashrae.org/S231P#"
  },
  "@id": "http://example.org#Modelica.Units",
  "@type": "S231P:Block",
  "S231P:documentation": [
    "info=<html>\n<p>\nLibrary <strong>Units</strong> is a <strong>free</strong> Modelica package providing\npredefined types, such as <em>Mass</em>,\n<em>Length</em>, <em>Time</em>.</p>\n</html>",
    "info=<html>\n<p>\nThis package provides predefined types, such as <strong>Angle_deg</strong> (angle in\ndegree), <strong>AngularVelocity_rpm</strong> (angular velocity in revolutions per\nminute) or <strong>Temperature_degF</strong> (temperature in degree Fahrenheit),\nwhich are in common use but are not part of the international standard on\nunits according to ISO 31-1992 \\General principles concerning quantities,\nunits and symbols\\ and ISO 1000-1992 \\SI units and recommendations for\nthe use of their multiples and of certain other units\\.</p>\n<p>If possible, the types in this package should not be used. Use instead\ntypes of package <code>Modelica.Units.SI</code>. For more information on units, see also\nthe book of Francois Cardarelli <strong>Scientific Unit Conversion - A\nPractical Guide to Metrication</strong> (Springer 1997).</p>\n</html>",
    "info=<html>\n<p>This package provides conversion functions from the non SI Units\ndefined in package <code>Modelica.Units.NonSI</code> to the\ncorresponding SI Units defined in package <code>Modelica.Units.SI</code> and vice\nversa. It is recommended to use these functions in the following\nway (note, that all functions have one Real input and one Real output\nargument):</p>\n<blockquote><pre>\n<strong>import</strong> Modelica.Units.SI;\n<strong>import</strong> Modelica.Units.Conversions.{from_degC, from_deg, from_rpm};\n   ...\n<strong>parameter</strong> SI.Temperature     T   = from_degC(25);   // convert 25 degree Celsius to kelvin\n<strong>parameter</strong> SI.Angle           phi = from_deg(180);   // convert 180 degree to radian\n<strong>parameter</strong> SI.AngularVelocity w   = from_rpm(3600);  // convert 3600 revolutions per minutes\n                                                   // to radian per seconds\n</pre></blockquote>\n\n</html>",
    "info=<html>\n<p>This package provides predefined types based on the international standard\non units.\n</p>\n<p>\nFor an introduction to the conventions used in this package, have a look at:\n<a href=\\modelica://Modelica.Units.UsersGuide.Conventions\\>Conventions</a>.\n</p>\n</html>",
    "info=<html>\n<p>This package provides predefined types, such as <em>Mass</em>,\n<em>Angle</em>, <em>Time</em>, based on the international standard\non units, e.g.,\n</p>\n\n<blockquote><pre>\n<strong>type</strong> Angle = Real(<strong>final</strong> quantity = \\Angle\\,\n                  <strong>final</strong> unit     = \\rad\\,\n                  displayUnit   = \\deg\\);\n</pre></blockquote>\n\n<p>\nSome of the types are derived SI units that are utilized in package Modelica\n(such as ComplexCurrent, which is a complex number where both the real and imaginary\npart have the SI unit Ampere).\n</p>\n\n<p>\nFurthermore, conversion functions from non SI-units to SI-units and vice versa\nare provided in subpackage\n<a href=\\modelica://Modelica.Units.Conversions\\>Conversions</a>.\n</p>\n\n<p>\nFor an introduction how units are used in the Modelica Standard Library\nwith package Units, have a look at:\n<a href=\\modelica://Modelica.Units.UsersGuide.HowToUseUnits\\>How to use Units</a>.\n</p>\n\n<p>\nCopyright &copy; 1998-2020, Modelica Association and contributors\n</p>\n</html>,revisions=<html>\n<ul>\n<li><em>May 25, 2011</em> by Stefan Wischhusen:<br>Added molar units for energy and enthalpy.</li>\n<li><em>Jan. 27, 2010</em> by Christian Kral:<br>Added complex units.</li>\n<li><em>Dec. 14, 2005</em> by <a href=\\http://www.robotic.dlr.de/Martin.Otter/\\>Martin Otter</a>:<br>Add User&#39;s Guide and removed &quot;min&quot; values for Resistance and Conductance.</li>\n<li><em>October 21, 2002</em> by <a href=\\http://www.robotic.dlr.de/Martin.Otter/\\>Martin Otter</a> and Christian Schweiger:<br>Added new package <strong>Conversions</strong>. Corrected typo <em>Wavelenght</em>.</li>\n<li><em>June 6, 2000</em> by <a href=\\http://www.robotic.dlr.de/Martin.Otter/\\>Martin Otter</a>:<br>Introduced the following new types<br>type Temperature = ThermodynamicTemperature;<br>types DerDensityByEnthalpy, DerDensityByPressure, DerDensityByTemperature, DerEnthalpyByPressure, DerEnergyByDensity, DerEnergyByPressure<br>Attribute &quot;final&quot; removed from min and max values in order that these values can still be changed to narrow the allowed range of values.<br>Quantity=&quot;Stress&quot; removed from type &quot;Stress&quot;, in order that a type &quot;Stress&quot; can be connected to a type &quot;Pressure&quot;.</li>\n<li><em>Oct. 27, 1999</em> by <a href=\\http://www.robotic.dlr.de/Martin.Otter/\\>Martin Otter</a>:<br>New types due to electrical library: Transconductance, InversePotential, Damping.</li>\n<li><em>Sept. 18, 1999</em> by <a href=\\http://www.robotic.dlr.de/Martin.Otter/\\>Martin Otter</a>:<br>Renamed from SIunit to SIunits. Subpackages expanded, i.e., the SIunits package, does no longer contain subpackages.</li>\n<li><em>Aug 12, 1999</em> by <a href=\\http://www.robotic.dlr.de/Martin.Otter/\\>Martin Otter</a>:<br>Type &quot;Pressure&quot; renamed to &quot;AbsolutePressure&quot; and introduced a new type &quot;Pressure&quot; which does not contain a minimum of zero in order to allow convenient handling of relative pressure. Redefined BulkModulus as an alias to AbsolutePressure instead of Stress, since needed in hydraulics.</li>\n<li><em>June 29, 1999</em> by <a href=\\http://www.robotic.dlr.de/Martin.Otter/\\>Martin Otter</a>:<br>Bug-fix: Double definition of &quot;Compressibility&quot; removed and appropriate &quot;extends Heat&quot; clause introduced in package SolidStatePhysics to incorporate ThermodynamicTemperature.</li>\n<li><em>April 8, 1998</em> by <a href=\\http://www.robotic.dlr.de/Martin.Otter/\\>Martin Otter</a> and Astrid Jaschinski:<br>Complete ISO 31 chapters realized.</li>\n<li><em>Nov. 15, 1997</em> by <a href=\\http://www.robotic.dlr.de/Martin.Otter/\\>Martin Otter</a> and Hubertus Tummescheit:<br>Some chapters realized.</li>\n</ul>\n</html>"
  ],
  "S231P:extends": "Modelica.Icons.Package",
  "S231P:icon": [
    "coordinateSystem(extent={{-100,-100},{100,100}}),graphics={Ellipse(extent={{-10,10},{10,-10}},lineColor={128,128,128},fillColor={128,128,128},fillPattern=FillPattern.Solid),Ellipse(extent={{-60,10},{-40,-10}},lineColor={128,128,128},fillColor={128,128,128},fillPattern=FillPattern.Solid),Ellipse(extent={{40,10},{60,-10}},lineColor={128,128,128},fillColor={128,128,128},fillPattern=FillPattern.Solid)}",
    "graphics={Polygon(points={{-80,-40},{-80,-40},{-55,50},{-52.5,62.5},{-65,60},{-65,65},{-35,77.5},{-32.5,60},{-50,0},{-50,0},{-30,15},{-20,27.5},{-32.5,27.5},{-32.5,27.5},{-32.5,32.5},{-32.5,32.5},{2.5,32.5},{2.5,32.5},{2.5,27.5},{2.5,27.5},{-7.5,27.5},{-30,7.5},{-30,7.5},{-25,-25},{-17.5,-28.75},{-10,-25},{-5,-26.25},{-5,-32.5},{-16.25,-41.25},{-31.25,-43.75},{-40,-33.75},{-45,-5},{-45,-5},{-52.5,-10},{-52.5,-10},{-60,-40},{-60,-40}},smooth=Smooth.Bezier,fillColor={128,128,128},pattern=LinePattern.None,fillPattern=FillPattern.Solid),Polygon(points={{87.5,30},{62.5,30},{62.5,30},{55,33.75},{36.25,35},{16.25,25},{7.5,6.25},{11.25,-7.5},{22.5,-12.5},{22.5,-12.5},{6.25,-22.5},{6.25,-35},{16.25,-38.75},{16.25,-38.75},{21.25,-41.25},{21.25,-41.25},{45,-48.75},{47.5,-61.25},{32.5,-70},{12.5,-65},{7.5,-51.25},{21.25,-41.25},{21.25,-41.25},{16.25,-38.75},{16.25,-38.75},{6.25,-41.25},{-6.25,-50},{-3.75,-68.75},{30,-76.25},{65,-62.5},{63.75,-35},{27.5,-26.25},{22.5,-20},{27.5,-15},{27.5,-15},{30,-7.5},{30,-7.5},{27.5,-2.5},{28.75,11.25},{36.25,27.5},{47.5,30},{53.75,22.5},{51.25,8.75},{45,-6.25},{35,-11.25},{30,-7.5},{30,-7.5},{27.5,-15},{27.5,-15},{43.75,-16.25},{65,-6.25},{72.5,10},{70,20},{70,20},{80,20}},smooth=Smooth.Bezier,fillColor={128,128,128},pattern=LinePattern.None,fillPattern=FillPattern.Solid)}",
    "graphics={Polygon(points={{80,0},{20,20},{20,-20},{80,0}},lineColor={191,0,0},fillColor={191,0,0},fillPattern=FillPattern.Solid),Line(color={191,0,0},points={{-80,0},{20,0}})}",
    "graphics={Text(textString=\"SI\",fontName=\"serif\",textColor={128,128,128},extent={{-80,80},{80,-78}},fillColor={128,128,128},fillPattern=FillPattern.None)}"
  ],
  "S231P:label": [
    "Conversions",
    "Icons",
    "NonSI",
    "SI",
    "Units",
    "UsersGuide"
  ]
}